jobs:
    build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Login to Docker
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2
          with:
            context: ./backend
            file: ./backend/Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-project:latest
  
    deploy:
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
      steps:
        - name: executing remote ssh commands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            script: |
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram-project
              sudo docker-compose stop
              sudo docker-compose rm backend
              rm .env
              touch .env
              echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
              echo DB_NAME=${{ secrets.DB_NAME }} >> .env
              echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
              echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
              echo DB_HOST=${{ secrets.DB_HOST }} >> .env
              echo DB_PORT=${{ secrets.DB_PORT }} >> .env
              echo DJ_SECRET_KEY=${{ secrets.DJ_SECRET_KEY }} >> .env
              sudo docker-compose up -d
  
    telegram_message:
      name: Send telegram message
      runs-on: ubuntu-latest
      needs: deploy
      steps:
        - uses: actions/checkout@master
        - name: send custom message with message
          uses: appleboy/telegram-action@master
          with:
            to: ${{ secrets.TELEGRAM_TO }}
            token: ${{ secrets.TELEGRAM_TOKEN }}
            message: ${{ github.workflow }} успешно выполнен!